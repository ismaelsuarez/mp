*Brechas y mejoras necesarias* 
1-ParÃ¡metros AFIP incompletos  (falta Prueba - falta informar al UI-segun como lo hace el proyecto)
*Solo se implementa FECompUltimoAutorizado. 
*Faltan FEParamGetTiposCbte, FEParamGetTiposIva, FEParamGetConcepto, etc. 
ğŸ‘‰ RecomendaciÃ³n: Implementarlos para validar en runtime los tipos autorizados y reducir riesgo de rechazo. 
2-Idempotencia y concurrencia (Falta auditoria del informe realizado)
*No estÃ¡ protegida la reemisiÃ³n ante fallos â†’ riesgo de duplicados. 
ğŸ‘‰ RecomendaciÃ³n: usar combinaciÃ³n ptoVta + tipoCbte + nroComprobante como llave Ãºnica y validar antes de emitir. 
3-Timeouts, reintentos y circuit breaker 
*Actualmente depende del default de afip.js. 
ğŸ‘‰ RecomendaciÃ³n: configurar AFIP_TIMEOUT y aplicar retries con backoff + logs de incidentes. 
4-CAE vencidos 
*Se guarda la fecha pero no hay validaciÃ³n previa al usarlo. 
ğŸ‘‰ RecomendaciÃ³n: implementar chequeo automÃ¡tico y alerta de vencimientos. 
5-ARCA / administraciÃ³n provincial 
*Totalmente ausente. 
ğŸ‘‰ Si el cliente factura en Mendoza o CABA, tarde o temprano necesitarÃ¡n integraciÃ³n provincial (ej: ARBA, ATM Mendoza). 
6-Seguridad y reloj del sistema 
*No hay validaciÃ³n NTP ni reporte de skew â†’ riesgo en WSAA. 
ğŸ‘‰ RecomendaciÃ³n: sincronizar NTP o alertar si hay desvÃ­o >60s. 
7-Pruebas automatizadas 
*No existen tests unitarios/integraciÃ³n. 
ğŸ‘‰ RecomendaciÃ³n: empezar con Jest + mocks de afip.js y ejecutar los casos de homologaciÃ³n como integraciÃ³n.